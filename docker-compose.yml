services:
  database:
    container_name: desafio-postgres
    image: postgres:16.1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_DB=desafio"
    ports:
      - "5433:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend

  migrations:
    container_name: desafio-migrations
    build:
      context: .
      dockerfile: Dockerfile.migrations
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=database;Port=5432;Database=desafio;User ID=postgres;Password=postgres;TrustServerCertificate=True;
    networks:
      - backend

  app:
    container_name: desafio-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=database;Port=5432;Database=desafio;User ID=postgres;Password=postgres;TrustServerCertificate=True;
    depends_on:
      database:
        condition: service_healthy
      migrations:
        condition: service_started
    networks:
      - backend

networks:
    backend:
volumes:
    db:    